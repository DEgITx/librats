name: CMake CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  release:
    types: [created]

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build-type: [Debug, Release]

    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential
      
      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
      
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          # Check if cmake is already installed and uninstall if needed
          if brew list cmake &>/dev/null; then
            brew uninstall cmake
          fi
          brew install cmake
      
      - name: Configure CMake
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DBUILD_TESTS=ON
      
      - name: Build
        run: |
          cmake --build build --config ${{ matrix.build-type }} --parallel
      
      - name: Run tests
        working-directory: build
        run: |
          ctest --output-on-failure -C ${{ matrix.build-type }}
      
      - name: Prepare artifacts (Linux)
        if: runner.os == 'Linux' && matrix.build-type == 'Release'
        run: |
          mkdir -p artifacts/linux/include
          cp build/bin/rats-client artifacts/linux/
          cp build/lib/librats.a artifacts/linux/
          cp src/*.h artifacts/linux/include/
          cd artifacts
          if [ "${{ github.event_name }}" == "release" ]; then
            VERSION=${{ github.ref_name }}
            zip -r librats-linux-${VERSION}.zip linux/
          else
            zip -r librats-linux.zip linux/
          fi
      
      - name: Prepare artifacts (Windows)
        if: runner.os == 'Windows' && matrix.build-type == 'Release'
        run: |
          mkdir -p artifacts/windows/include
          cp build/bin/Release/rats-client.exe artifacts/windows/
          cp build/lib/Release/rats.lib artifacts/windows/
          cp src/*.h artifacts/windows/include/
          cd artifacts
          if ("${{ github.event_name }}" -eq "release") {
            $VERSION = "${{ github.ref_name }}"
            7z a "librats-windows-${VERSION}.zip" windows/*
          } else {
            7z a librats-windows.zip windows/*
          }
      
      - name: Prepare artifacts (macOS)
        if: runner.os == 'macOS' && matrix.build-type == 'Release'
        run: |
          mkdir -p artifacts/macos/include
          cp build/bin/rats-client artifacts/macos/
          cp build/lib/librats.a artifacts/macos/
          cp src/*.h artifacts/macos/include/
          cd artifacts
          if [ "${{ github.event_name }}" == "release" ]; then
            VERSION=${{ github.ref_name }}
            zip -r librats-macos-${VERSION}.zip macos/
          else
            zip -r librats-macos.zip macos/
          fi
      
      - name: Upload artifacts (Linux)
        if: runner.os == 'Linux' && matrix.build-type == 'Release' && github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: librats-linux-${{ github.sha }}
          path: artifacts/linux/
          retention-days: 30
      
      - name: Upload artifacts (Windows)
        if: runner.os == 'Windows' && matrix.build-type == 'Release' && github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: librats-windows-${{ github.sha }}
          path: artifacts/windows/
          retention-days: 30

      - name: Upload artifacts (macOS)
        if: runner.os == 'macOS' && matrix.build-type == 'Release' && github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: librats-macos-${{ github.sha }}
          path: artifacts/macos/
          retention-days: 30

      - name: Upload to Release (Linux)
        if: runner.os == 'Linux' && matrix.build-type == 'Release' && github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/librats-linux-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      
      - name: Upload to Release (Windows)
        if: runner.os == 'Windows' && matrix.build-type == 'Release' && github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/librats-windows-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      
      - name: Upload to Release (macOS)
        if: runner.os == 'macOS' && matrix.build-type == 'Release' && github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/librats-macos-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
